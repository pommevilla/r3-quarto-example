{
  "hash": "57e55392112407d80f6a21ce75f44780",
  "result": {
    "markdown": "---\ntitle: \"A Basic Quarto Doc\"\nauthor: \"Paul Villanueva\"\ndate: \"8/13/2021\"\nformat:\n  html:\n    theme: styles.scss\nbibliography: ../references.bib\n---\n\nThis is an example Quarto document. Note the `qmd` extension - this tells Quarto that this is a Markdown files that contains computations.\n\nSince Quarto based on Markdown, we can **bold** and *italicize* text. We can also make headers.\n\n# Let's make a table\n\n|   Meal    |    Food     |\n|:---------:|:-----------:|\n| Breakfast |   Coffee    |\n|   Lunch   |  Leftovers  |\n|  Dinner   | Spam Musubi |\n\n# Example images\n\n::: {layout=\"[[1], [1, 1]]\"}\n![My support system](images/vic.jpg \"Breakfast: Vietnamese iced coffee\")\n\n![Lunch: Leftovers](images/leftovers.jpg \"Leftovers fried rice? Fried rice leftovers? Leftover flavored fried rice?\"){width=\"400\"}\n\n![Dinner: Spam musubi](images/spam_musubi.jpg \"Oh mama we eating good tonight\"){width=\"400\"}\n:::\n\n# Code and chunk options\n\nQuarto is based on **R**Markdown, so you can do all the R stuff you're used to as well.\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Read in and visualize crop priming data\"}\nlibrary(tidyverse)\n\nstandard_curves <- readxl::read_xlsx('data/std_curve.xlsx', sheet = \"everything\") %>% \n  janitor::clean_names() %>% \n  filter(amoa < 40)\n\nlm_eqn = function(df){\n    m = lm(log_qty ~ ct, df);\n    data.frame(\n      a = format(as.numeric(coef(m)[1]), digits = 2),\n      b = format(as.numeric(coef(m)[2]), digits = 2),\n      r2 = format(summary(m)$r.squared, digits = 3)\n    )\n}\n\nst_splits <-  standard_curves %>% \n  group_by(amoa, run) %>% \n  group_split() \n\neqs <- st_splits %>% \n  lapply(., lm_eqn) %>% \n  bind_rows()\n\nlabels <- lapply(st_splits, slice_head, n = 1) %>% \n  bind_rows() %>% \n  select(amoa, run) %>% \n  bind_cols(eqs) %>% \n  mutate(amoa = paste0(\"amoA_AOB_p\", amoa)) %>%\n  mutate(eq_label = paste0(\"y = \", a, \" - \", abs(as.numeric(b)), \"x<br>r^2 = \", r2))\n\n\nstandard_curves %>% \n  mutate(amoa = paste0(\"amoA_AOB_p\", amoa)) %>% \n  ggplot(aes(log_qty, ct)) +\n  geom_point() +\n  facet_grid(run ~ amoa, scales = \"free\") + \n  theme(\n    panel.border = element_rect(color = \"black\", size = 1, fill = NA),\n    panel.grid.minor.x = element_blank(),\n    panel.grid.minor.y = element_blank(),\n    panel.grid.major.x = element_line(color = \"gray\", size = 0.5, linetype = \"dashed\"),\n    panel.grid.major.y = element_line(color = \"gray\", size = 0.5, linetype = \"dashed\"),\n    panel.spacing = unit(0.5, \"lines\"),\n    panel.background = element_blank(),\n    strip.background = element_rect(color = \"black\", size = 1, fill = NA),\n  ) + \n  labs(\n    x = \"Log(gene copies per reaction)\",\n    y = \"Ct\"\n  ) + \n  scale_x_continuous(limits = c(0, 7), breaks = seq(0, 7, 1), expand = c(0, 0)) + \n  scale_y_continuous(limits = c(0, 25)) +\n  geom_smooth(aes(group=1), method=\"lm\", se=FALSE) + \n  ggtext::geom_richtext(data = labels, aes(x = 3, y = 5, label = eq_label),\n                        size = 4, fontface = \"bold\", inherit.aes = FALSE)\n```\n\n::: {.cell-output-display}\n![Standard curves for the LAMPS crop priming experiment](first_files/figure-docx/fig-std-curves-1.png){#fig-std-curves}\n:::\n:::\n\nWe can also throw some Python in here:\n\n::: {.cell}\n\n```{.python .cell-code}\nxs = [x for x in range(10)]\n\nprint(*(f'{x} squared is {x ^ 2}.' for x in xs), sep='\\n')\n```\n\n::: {.cell-output-stdout}\n```\n0 squared is 2.\n1 squared is 3.\n2 squared is 0.\n3 squared is 1.\n4 squared is 6.\n5 squared is 7.\n6 squared is 4.\n7 squared is 5.\n8 squared is 10.\n9 squared is 11.\n```\n:::\n:::\n\n::: {.cell}\n\n```{.python .cell-code  code-fold=\"true\"}\nimport matplotlib.pyplot as plt\nimport numpy as np\n\nZ = np.random.rand(6, 10)\nx = [x + 0.5 for x in xs]\ny = np.arange(4.5, 11, 1)  \n\nfig, ax = plt.subplots();\nax.pcolormesh(x, y, Z)\n```\n\n::: {.cell-output-display}\n![That's a heatmap, baby!](first_files/figure-docx/unnamed-chunk-3-1.png){#fig-tiles}\n:::\n:::\n\n## Math stuff\n\nWe can also write math stuff! For example, here is a definition:\n\n::: {#def-cont-at-a-point .demo-def}\n## Continuity\n\nThe function $f: \\mathbb{R}^n \\to \\mathbb{R}^m$ is *continuous at a point* $x \\in \\mathbb{R}^n$ if for all $\\varepsilon > 0$ there exists $\\delta > 0$ such that if $|x - x_0| < \\delta$, then $|f(x) - f(x_0)| < \\varepsilon$. If this is true for all such $x$ in the domain of $f$, we say that $f$ is a *continuous function.*\n:::\n\n::: {#exercise-1}\n## Example\n\nDefine $f: \\mathbb{R} \\to \\mathbb{R}$ by:\n\n$$\nf(x) = \\begin{cases}\n1, x \\in \\mathbb{Q},\\\\\n0, x \\not\\in \\mathbb{Q}\n\\end{cases}\n$$\n\nProve that $f$ is not a continuous function.\n:::\n\n**Proof.** Let $\\varepsilon = \\frac{1}{2}$ and choose any $x \\in \\mathbb{Q}$. For any $\\delta > 0$, we can find some $c \\not\\in \\mathbb{Q}$ such that $|x - c| < \\delta$ since the irrationals are dense in $\\mathbb{R}$. But then $|f(x) - f(c)| = |1 - 0| = 1 > \\frac{1}{2}$, showing that $f$ is not continuous at $x$. $\\blacksquare$\n\n## Adding references\n\nWe can also add references. For instance, the following definition of $k$-partially colored comes from this paper: [@blair2020]\n\n::: {#def-merid-coloring .demo-def}\n## $k$-partially colored\n\nLet $D$ be a diagram of a link $L$ with $n$ crossings. We call $D$ $k$-*partially colored* if we have specified a subset $A$ of the strands of $D$ and a function $f:\\to \\{1, 2, \\dots, k\\}$. We refer to this partial coloring by the tuple $(A, f)$. Given $k$-partial colorings $(A_1, f_1)$ and $(A_2, f_2)$ of $D$, we say $(A_2, f_2)$ is the result of a coloring move on $(A_1, f_1)$ if\n\n1.  $A_1 \\subset A_2$ and $A_2 \\ A_1 = \\{s_j\\}$ for some strand $s_j$ in $D$;\n2.  $f_2|_{A_1} = f_1$;\n3.  $s_j$ is adjacent to $s_i$ at some crossing $c \\in v(D)$, and $s_i \\in A_1$;\n4.  the over-strand $s_k$ at $c$ is an element of $A_1$;\n5.  $f_1(s_i) = f_2(s_j)$.\n:::\n\n## Cross-references\n\nAlong the way, we've been giving each of the items above labels. The Visual Editor knows about these labels and we can call them up for cross referencing. For example:\n\n-   We were pretty happy about the standard curves in @fig-std-curves\n\n-   I love me some heatmaps like @fig-tiles\n\n-   @def-merid-coloring is trivially true for the unknot.\n\n# Bibliography",
    "supporting": [
      "first_files\\figure-docx"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": [],
    "engineDependencies": {},
    "preserve": null,
    "postProcess": false
  }
}